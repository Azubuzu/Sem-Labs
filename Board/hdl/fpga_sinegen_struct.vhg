--
-- VHDL Architecture Board.FPGA_sineGen.struct
--
-- Created:
--          by - oliver.gubler.UNKNOWN (WE5370)
--          at - 14:29:35 16.02.2018
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2015.2 (Build 5)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

LIBRARY Beamer;
LIBRARY Board;
LIBRARY SineInterpolator;

ARCHITECTURE struct OF FPGA_sineGen IS

   -- Architecture declarations
   constant signalBitNb: positive := 16;
   constant phaseBitNb: positive := 17;

   -- Internal signal declarations
   SIGNAL logic1      : std_uLogic;
   SIGNAL reset       : std_ulogic;
   SIGNAL resetSnch_N : std_ulogic;
   SIGNAL resetSynch  : std_ulogic;
   SIGNAL sineX       : unsigned(signalBitNb-1 DOWNTO 0);
   SIGNAL sineY       : unsigned(signalBitNb-1 DOWNTO 0);
   SIGNAL squareY     : unsigned(signalBitNb-1 DOWNTO 0);
   SIGNAL stepX       : unsigned(phaseBitNb-1 DOWNTO 0);
   SIGNAL stepY       : unsigned(phaseBitNb-1 DOWNTO 0);


   -- Component Declarations
   COMPONENT DAC
   GENERIC (
      signalBitNb : positive := 16
   );
   PORT (
      serialOut  : OUT    std_ulogic ;
      parallelIn : IN     unsigned (signalBitNb-1 DOWNTO 0);
      clock      : IN     std_ulogic ;
      reset      : IN     std_ulogic 
   );
   END COMPONENT;
   COMPONENT DFF
   PORT (
      CLK : IN     std_uLogic ;
      CLR : IN     std_uLogic ;
      D   : IN     std_uLogic ;
      Q   : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT inverterIn
   PORT (
      in1  : IN     std_uLogic ;
      out1 : OUT    std_uLogic 
   );
   END COMPONENT;
   COMPONENT sineGen
   GENERIC (
      signalBitNb : positive := 16;
      phaseBitNb  : positive := 10
   );
   PORT (
      clock    : IN     std_ulogic ;
      reset    : IN     std_ulogic ;
      step     : IN     unsigned (phaseBitNb-1 DOWNTO 0);
      sawtooth : OUT    unsigned (signalBitNb-1 DOWNTO 0);
      sine     : OUT    unsigned (signalBitNb-1 DOWNTO 0);
      square   : OUT    unsigned (signalBitNb-1 DOWNTO 0);
      triangle : OUT    unsigned (signalBitNb-1 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : DAC USE ENTITY Beamer.DAC;
   FOR ALL : DFF USE ENTITY Board.DFF;
   FOR ALL : inverterIn USE ENTITY Board.inverterIn;
   FOR ALL : sineGen USE ENTITY SineInterpolator.sineGen;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   triggerOut <= squareY(squareY'high);

   -- HDL Embedded Text Block 2 eb2
   stepX <= to_unsigned(2, stepX'length);

   -- HDL Embedded Text Block 3 eb3
   stepY <= to_unsigned(3, stepY'length);

   -- HDL Embedded Text Block 4 eb4
   logic1 <= '1';


   -- Instance port mappings.
   I4 : DAC
      GENERIC MAP (
         signalBitNb => signalBitNb
      )
      PORT MAP (
         serialOut  => xOut,
         parallelIn => sineX,
         clock      => clock,
         reset      => resetSynch
      );
   I8 : DAC
      GENERIC MAP (
         signalBitNb => signalBitNb
      )
      PORT MAP (
         serialOut  => yOut,
         parallelIn => sineY,
         clock      => clock,
         reset      => resetSynch
      );
   I6 : DFF
      PORT MAP (
         CLK => clock,
         CLR => reset,
         D   => logic1,
         Q   => resetSnch_N
      );
   I0 : inverterIn
      PORT MAP (
         in1  => resetSnch_N,
         out1 => resetSynch
      );
   I1 : inverterIn
      PORT MAP (
         in1  => reset_N,
         out1 => reset
      );
   I3 : sineGen
      GENERIC MAP (
         signalBitNb => signalBitNb,
         phaseBitNb  => phaseBitNb
      )
      PORT MAP (
         clock    => clock,
         reset    => resetSynch,
         step     => stepX,
         sawtooth => OPEN,
         sine     => sineX,
         square   => OPEN,
         triangle => OPEN
      );
   I7 : sineGen
      GENERIC MAP (
         signalBitNb => signalBitNb,
         phaseBitNb  => phaseBitNb
      )
      PORT MAP (
         clock    => clock,
         reset    => resetSynch,
         step     => stepY,
         sawtooth => OPEN,
         sine     => sineY,
         square   => squareY,
         triangle => OPEN
      );

END struct;
